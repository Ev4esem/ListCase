// Generated by view binder compiler. Do not edit!
package com.example.listcase.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listcase.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsCaseBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText edDesc;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final ImageButton imBackStack;

  @NonNull
  public final ImageButton imDelete;

  @NonNull
  public final Spinner spinImportance;

  @NonNull
  public final Switch swTime;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView tvDelete;

  @NonNull
  public final TextView tvSave;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  private FragmentDetailsCaseBinding(@NonNull ScrollView rootView, @NonNull EditText edDesc,
      @NonNull Guideline guideline, @NonNull Guideline guideline2, @NonNull Guideline guideline3,
      @NonNull ImageButton imBackStack, @NonNull ImageButton imDelete,
      @NonNull Spinner spinImportance, @NonNull Switch swTime, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView tvDelete, @NonNull TextView tvSave,
      @NonNull TextView tvTime, @NonNull View view, @NonNull View view2) {
    this.rootView = rootView;
    this.edDesc = edDesc;
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.imBackStack = imBackStack;
    this.imDelete = imDelete;
    this.spinImportance = spinImportance;
    this.swTime = swTime;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.tvDelete = tvDelete;
    this.tvSave = tvSave;
    this.tvTime = tvTime;
    this.view = view;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsCaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsCaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details_case, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsCaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edDesc;
      EditText edDesc = ViewBindings.findChildViewById(rootView, id);
      if (edDesc == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.imBackStack;
      ImageButton imBackStack = ViewBindings.findChildViewById(rootView, id);
      if (imBackStack == null) {
        break missingId;
      }

      id = R.id.im_delete;
      ImageButton imDelete = ViewBindings.findChildViewById(rootView, id);
      if (imDelete == null) {
        break missingId;
      }

      id = R.id.spinImportance;
      Spinner spinImportance = ViewBindings.findChildViewById(rootView, id);
      if (spinImportance == null) {
        break missingId;
      }

      id = R.id.swTime;
      Switch swTime = ViewBindings.findChildViewById(rootView, id);
      if (swTime == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.tv_delete;
      TextView tvDelete = ViewBindings.findChildViewById(rootView, id);
      if (tvDelete == null) {
        break missingId;
      }

      id = R.id.tvSave;
      TextView tvSave = ViewBindings.findChildViewById(rootView, id);
      if (tvSave == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentDetailsCaseBinding((ScrollView) rootView, edDesc, guideline, guideline2,
          guideline3, imBackStack, imDelete, spinImportance, swTime, textView2, textView3, tvDelete,
          tvSave, tvTime, view, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
